name: release
on:
  workflow_call:
    inputs:
      tag-name:
        type: string
        description: "Tag to release"
        required: true
  workflow_dispatch:
    inputs:
      tag-name:
        type: string
        description: "Tag to release"
        required: true
      dry-run:
        type: boolean
        description: "Don't actually release"
        required: false
        default: false

permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v3

      - name: Setup | Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Setup | Cache
        uses: Swatinem/rust-cache@v2

      - name: Setup | Cross
        if: matrix.os == 'ubuntu-latest'
        uses: taiki-e/install-action@cross

      - name: Build | Build [Cargo]
        if: matrix.os != 'ubuntu-latest'
        run: |
          cargo build --release --locked --target ${{ matrix.target }}
      - name: Build | Build [Cross]
        if: matrix.os == 'ubuntu-latest'
        run: |
          cross build --release --locked --target ${{ matrix.target }}

      - name: Post Build | Get package info
        id: package-info
        shell: bash
        run: |
          if [[ ${{ matrix.target }} != 'windows-latest' ]]; then
            echo "name=justcommit-${{ matrix.target }}.tar.gz" >> $GITHUB_OUTPUT
          else
            echo "name=justcommit-${{ matrix.target }}.zip" >> $GITHUB_OUTPUT
          fi

      - name: Post Build | Prepare artifact [*nix]
        run: |
          tar czvf "${{ steps.package-info.outputs.name }}" "target/${{ matrix.target }}/release/justcommit" README.md LICENSE
      - name: Post Build | Prepare artifact [Windows]
        run: |
          zip "${{ steps.package-info.outputs.name }}" "target/${{ matrix.target }}/release/justcommit" README.md LICENSE

      - name: Release | Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.package-info.outputs.name }}
          path: ${{ steps.package-info.outputs.name }}

      - name: Release | Upload asset
        if: ${{ !inputs.dry-run }}
        run: gh release upload ${{ inputs.tag-name }} ${{ steps.package-info.outputs.name }}.*
